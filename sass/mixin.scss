@import "variables.scss";

@mixin button-shape {
    border: $one+$px $solid $default_color;
    #{$height}: $five*$ten+$px;
    #{$color}: $default_color;
    #{$font+$dash+$size}:$ten+$px;
}

@mixin link {
    #{$cursor}: pointer;
}

@mixin dynamic_cursor($value) { //pass nth params
    #{$cursor}: $value;
}

.#{$btn}#{$dash}success {
    @include button-shape;
    @include dynamic_cursor(default);
    background-color: green;
}

.#{$btn}#{$dash}danger {
    @include button-shape;
    background-color: red;
    @include link;
}
.#{$btn}#{$dash}default {
    @include button-shape;
    @include dynamic_cursor(copy);
    background-color: #ffffff;
}

.button-basic  {
    border: none;
    padding: 15px 30px;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
  }
  
  .button-report  {
    @extend .button-basic;
    background-color: red;
  }
  
  .button-submit  {
    @extend .button-basic;
    background-color: green;
    color: white;
  }

  /** text formats */
  $text-algin: $left, $right, $center;
  @each $text_align in $text-algin {
        #{$dot}#{$text}#{$dash}#{$text_align} {
            #{$text+$dash+$algin}: $text_align;
      }
      
  }
 $number: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10; 
 $margin-algin: $left, $right, $top, $bottom;
 @each $no in $number {
    @each $margin_align in $margin-algin {
        #{$dot}#{$margin}#{$dash}#{$margin_align}#{$dash}#{$no}#{$px} {
            #{$margin}#{$dash}#{$margin_align}: $no+$px;
        }
        #{$dot}#{$padding}#{$dash}#{$margin_align}#{$dash}#{$no}#{$px} {
            #{$padding}#{$dash}#{$margin_align}: $no+$px;
        }
        
    }
    // end of margin
 }
 @each $no in $number {
    .common#{$dash}#{$width}#{$dash}#{$no}#{$px} {
        #{$width}: $no+$px;
    }
 }



/** mixin with params**/
@mixin boxshadow($shadow) { // $shadow... // ... represent multiple arguments
    box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -webkit-box-shadow: $shadow;
}
body {
    @include boxshadow(1px 1px 2px rgba(0, 0, 0, 3)); //boxshadow(1px 1px 2px rgba(0, 0, 0, 3), 4px 4px 4px white);
}


// key frame animation

@mixin keyframe($frame) {
    @-webkit-keyframe #{ $frame } {
        @content;
    }

    @-o-keyframe #{$frame} {
        @content;
    }
    @-moz-keyframe #{$frame} {
        @content;   
    }
    @-keyframe #{$frame} {
        @content;
    }
}
@include keyframe(frame){
    // 0% {opacity: 0}
    // 100% {opacity: 1}
}

@for $i from 1 to 6 {
    #{nth($headers,$i)}{
        font-size: nth($headerFont, $i)+$px;
    }
}

// for each loop using data set
$headerMap: (
    h1: 55px,
    h2: 45px
);
@each $head, $font in $headerMap {
    #{$head} {
        font-size: $font;
    }
}